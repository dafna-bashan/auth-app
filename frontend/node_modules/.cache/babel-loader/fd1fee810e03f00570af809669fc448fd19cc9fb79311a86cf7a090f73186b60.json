{"ast":null,"code":"import { authService } from '../../services/authService';\nimport { userService } from '../../services/userService';\nexport function login(userCreds) {\n  return async dispatch => {\n    try {\n      const user = await authService.login(userCreds);\n      dispatch({\n        type: 'SET_USER',\n        user\n      });\n      return user;\n    } catch (err) {\n      console.log('UserActions: err in login', err);\n      throw err;\n    }\n  };\n}\nexport function signup(userCreds) {\n  return async dispatch => {\n    try {\n      const users = await userService.getUsers();\n      const isUserExist = users.filter(user => user.email === userCreds.email);\n      const user = await authService.signup(userCreds);\n      dispatch({\n        type: 'SET_USER',\n        user\n      });\n      dispatch({\n        type: 'SET_USERS',\n        user\n      });\n    } catch (err) {\n      console.log('UserActions: err in signup', err);\n    }\n  };\n}\nexport function logout() {\n  return async dispatch => {\n    try {\n      await authService.logout();\n      dispatch({\n        type: 'SET_USER',\n        user: null\n      });\n    } catch (err) {\n      console.log('UserActions: err in logout', err);\n    }\n  };\n}","map":{"version":3,"names":["authService","userService","login","userCreds","dispatch","user","type","err","console","log","signup","users","getUsers","isUserExist","filter","email","logout"],"sources":["/Users/dafi/Desktop/dev/projects/auth-app/src/store/actions/authActions.js"],"sourcesContent":["import {authService} from '../../services/authService'\nimport { userService } from '../../services/userService'\n\nexport function login(userCreds) {\n    return async dispatch => {\n      try {\n        const user = await authService.login(userCreds)\n        dispatch({ type: 'SET_USER', user })\n        return user\n      } catch (err) {\n        console.log('UserActions: err in login', err)\n        throw err\n      }\n    }\n  }\n\n  export function signup(userCreds) {\n    return async dispatch => {\n      try {\n        const users = await userService.getUsers()\n        const isUserExist = users.filter(user => user.email === userCreds.email)\n        const user = await authService.signup(userCreds)\n        dispatch({ type: 'SET_USER', user })\n        dispatch({ type: 'SET_USERS', user })\n      } catch (err) {\n        console.log('UserActions: err in signup', err)\n      }\n    }\n  }\n\n  export function logout() {\n    return async dispatch => {\n      try {\n        await authService.logout()\n        dispatch({ type: 'SET_USER', user: null })\n      } catch (err) {\n        console.log('UserActions: err in logout', err)\n      }\n    }\n  }"],"mappings":"AAAA,SAAQA,WAAW,QAAO,4BAA4B;AACtD,SAASC,WAAW,QAAQ,4BAA4B;AAExD,OAAO,SAASC,KAAK,CAACC,SAAS,EAAE;EAC7B,OAAO,MAAMC,QAAQ,IAAI;IACvB,IAAI;MACF,MAAMC,IAAI,GAAG,MAAML,WAAW,CAACE,KAAK,CAACC,SAAS,CAAC;MAC/CC,QAAQ,CAAC;QAAEE,IAAI,EAAE,UAAU;QAAED;MAAK,CAAC,CAAC;MACpC,OAAOA,IAAI;IACb,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,GAAG,CAAC;MAC7C,MAAMA,GAAG;IACX;EACF,CAAC;AACH;AAEA,OAAO,SAASG,MAAM,CAACP,SAAS,EAAE;EAChC,OAAO,MAAMC,QAAQ,IAAI;IACvB,IAAI;MACF,MAAMO,KAAK,GAAG,MAAMV,WAAW,CAACW,QAAQ,EAAE;MAC1C,MAAMC,WAAW,GAAGF,KAAK,CAACG,MAAM,CAACT,IAAI,IAAIA,IAAI,CAACU,KAAK,KAAKZ,SAAS,CAACY,KAAK,CAAC;MACxE,MAAMV,IAAI,GAAG,MAAML,WAAW,CAACU,MAAM,CAACP,SAAS,CAAC;MAChDC,QAAQ,CAAC;QAAEE,IAAI,EAAE,UAAU;QAAED;MAAK,CAAC,CAAC;MACpCD,QAAQ,CAAC;QAAEE,IAAI,EAAE,WAAW;QAAED;MAAK,CAAC,CAAC;IACvC,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,GAAG,CAAC;IAChD;EACF,CAAC;AACH;AAEA,OAAO,SAASS,MAAM,GAAG;EACvB,OAAO,MAAMZ,QAAQ,IAAI;IACvB,IAAI;MACF,MAAMJ,WAAW,CAACgB,MAAM,EAAE;MAC1BZ,QAAQ,CAAC;QAAEE,IAAI,EAAE,UAAU;QAAED,IAAI,EAAE;MAAK,CAAC,CAAC;IAC5C,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,GAAG,CAAC;IAChD;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}