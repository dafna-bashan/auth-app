{"ast":null,"code":"import { authService } from '../../services/authService';\n// import { userService } from '../../services/userService'\n\nexport function login(userCreds) {\n  return async dispatch => {\n    try {\n      const user = await authService.login(userCreds);\n      dispatch({\n        type: 'SET_USER',\n        user\n      });\n      return user;\n    } catch (err) {\n      dispatch({\n        type: 'SET_ERROR',\n        err\n      });\n      console.log('UserActions: err in login', err);\n      throw err;\n    }\n  };\n}\nexport function signup(userCreds) {\n  return async dispatch => {\n    try {\n      const user = await authService.signup(userCreds);\n      dispatch({\n        type: 'SET_USER',\n        user\n      });\n      dispatch({\n        type: 'ADD_USER',\n        user\n      });\n      return user;\n    } catch (err) {\n      dispatch({\n        type: 'SET_ERROR',\n        err\n      });\n      console.log('UserActions: err in signup', err);\n    }\n  };\n}\nexport function logout() {\n  return async dispatch => {\n    try {\n      await authService.logout();\n      dispatch({\n        type: 'SET_USER',\n        user: null\n      });\n      dispatch({\n        type: 'REMOVE_ERROR'\n      });\n    } catch (err) {\n      dispatch({\n        type: 'SET_ERROR',\n        err\n      });\n      console.log('UserActions: err in logout', err);\n    }\n  };\n}","map":{"version":3,"names":["authService","login","userCreds","dispatch","user","type","err","console","log","signup","logout"],"sources":["/Users/dafi/Desktop/dev/projects/auth-app/frontend/src/store/actions/authActions.js"],"sourcesContent":["import { authService } from '../../services/authService'\n// import { userService } from '../../services/userService'\n\nexport function login(userCreds) {\n  return async dispatch => {\n    try {\n      const user = await authService.login(userCreds)\n      dispatch({ type: 'SET_USER', user })\n      return user\n    } catch (err) {\n      dispatch({ type: 'SET_ERROR', err })\n      console.log('UserActions: err in login', err)\n      throw err\n    }\n  }\n}\n\nexport function signup(userCreds) {\n  return async dispatch => {\n    try {\n      const user = await authService.signup(userCreds)\n      dispatch({ type: 'SET_USER', user })\n      dispatch({ type: 'ADD_USER', user })\n      return user\n    } catch (err) {\n      dispatch({ type: 'SET_ERROR', err })\n      console.log('UserActions: err in signup', err)\n    }\n  }\n}\n\nexport function logout() {\n  return async dispatch => {\n    try {\n      await authService.logout()\n      dispatch({ type: 'SET_USER', user: null })\n      dispatch({ type: 'REMOVE_ERROR' })\n    } catch (err) {\n      dispatch({ type: 'SET_ERROR', err })\n      console.log('UserActions: err in logout', err)\n    }\n  }\n}"],"mappings":"AAAA,SAASA,WAAW,QAAQ,4BAA4B;AACxD;;AAEA,OAAO,SAASC,KAAK,CAACC,SAAS,EAAE;EAC/B,OAAO,MAAMC,QAAQ,IAAI;IACvB,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMJ,WAAW,CAACC,KAAK,CAACC,SAAS,CAAC;MAC/CC,QAAQ,CAAC;QAAEE,IAAI,EAAE,UAAU;QAAED;MAAK,CAAC,CAAC;MACpC,OAAOA,IAAI;IACb,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZH,QAAQ,CAAC;QAAEE,IAAI,EAAE,WAAW;QAAEC;MAAI,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,GAAG,CAAC;MAC7C,MAAMA,GAAG;IACX;EACF,CAAC;AACH;AAEA,OAAO,SAASG,MAAM,CAACP,SAAS,EAAE;EAChC,OAAO,MAAMC,QAAQ,IAAI;IACvB,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMJ,WAAW,CAACS,MAAM,CAACP,SAAS,CAAC;MAChDC,QAAQ,CAAC;QAAEE,IAAI,EAAE,UAAU;QAAED;MAAK,CAAC,CAAC;MACpCD,QAAQ,CAAC;QAAEE,IAAI,EAAE,UAAU;QAAED;MAAK,CAAC,CAAC;MACpC,OAAOA,IAAI;IACb,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZH,QAAQ,CAAC;QAAEE,IAAI,EAAE,WAAW;QAAEC;MAAI,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,GAAG,CAAC;IAChD;EACF,CAAC;AACH;AAEA,OAAO,SAASI,MAAM,GAAG;EACvB,OAAO,MAAMP,QAAQ,IAAI;IACvB,IAAI;MACF,MAAMH,WAAW,CAACU,MAAM,EAAE;MAC1BP,QAAQ,CAAC;QAAEE,IAAI,EAAE,UAAU;QAAED,IAAI,EAAE;MAAK,CAAC,CAAC;MAC1CD,QAAQ,CAAC;QAAEE,IAAI,EAAE;MAAe,CAAC,CAAC;IACpC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZH,QAAQ,CAAC;QAAEE,IAAI,EAAE,WAAW;QAAEC;MAAI,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,GAAG,CAAC;IAChD;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}