{"ast":null,"code":"const initialState = {\n  isLoading: false,\n  isSuccessful: false\n};\nexport function systemReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  switch (action.type) {\n    case 'RESTART':\n      return {\n        ...state,\n        isLoading: false,\n        isSuccessful: false\n      };\n    case 'LOADING_START':\n      return {\n        ...state,\n        isLoading: true,\n        isSuccessful: false\n      };\n    case 'LOADING_DONE':\n      return {\n        ...state,\n        isLoading: false,\n        isSuccessful: true\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["initialState","isLoading","isSuccessful","systemReducer","state","action","type"],"sources":["/Users/dafi/Desktop/dev/projects/auth-app/src/store/reducers/systemReducer.js"],"sourcesContent":["const initialState = {\r\n  isLoading: false,\r\n  isSuccessful: false\r\n};\r\n\r\nexport function systemReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'RESTART':\r\n      return { ...state, isLoading: false, isSuccessful: false }\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true, isSuccessful: false }\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false, isSuccessful: true }\r\n    default: return state\r\n  }\r\n}\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,SAAS,EAAE,KAAK;EAChBC,YAAY,EAAE;AAChB,CAAC;AAED,OAAO,SAASC,aAAa,GAAoC;EAAA,IAAnCC,KAAK,uEAAGJ,YAAY;EAAA,IAAEK,MAAM,uEAAG,CAAC,CAAC;EAC7D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,SAAS;MACZ,OAAO;QAAE,GAAGF,KAAK;QAAEH,SAAS,EAAE,KAAK;QAAEC,YAAY,EAAE;MAAM,CAAC;IAC5D,KAAK,eAAe;MAClB,OAAO;QAAE,GAAGE,KAAK;QAAEH,SAAS,EAAE,IAAI;QAAEC,YAAY,EAAE;MAAM,CAAC;IAC3D,KAAK,cAAc;MACjB,OAAO;QAAE,GAAGE,KAAK;QAAEH,SAAS,EAAE,KAAK;QAAEC,YAAY,EAAE;MAAK,CAAC;IAC3D;MAAS,OAAOE,KAAK;EAAA;AAEzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}