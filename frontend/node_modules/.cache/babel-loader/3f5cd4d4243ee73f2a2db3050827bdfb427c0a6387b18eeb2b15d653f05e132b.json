{"ast":null,"code":"var _jsxFileName = \"/Users/dafi/Desktop/dev/projects/auth-app/src/cmps/ErrorModal.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ErrorModal = _ref => {\n  _s();\n  let {\n    error\n  } = _ref;\n  const dispatch = useDispatch();\n  const onRemoveError = () => {\n    dispatch({\n      type: 'REMOVE_ERROR',\n      error: null\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onRemoveError,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), '' + error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(ErrorModal, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = ErrorModal;\nvar _c;\n$RefreshReg$(_c, \"ErrorModal\");","map":{"version":3,"names":["React","useDispatch","ErrorModal","error","dispatch","onRemoveError","type"],"sources":["/Users/dafi/Desktop/dev/projects/auth-app/src/cmps/ErrorModal.jsx"],"sourcesContent":["import React from 'react'\nimport { useDispatch } from 'react-redux'\n\nexport const ErrorModal = ({ error }) => {\n\n    const dispatch = useDispatch()\n\n    const onRemoveError = () => {\n        dispatch({ type: 'REMOVE_ERROR', error: null })\n    }\n\n    return (\n        <div>\n            <button onClick={onRemoveError}>X</button>\n            {'' + error}\n        </div>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AAAA;AAEzC,OAAO,MAAMC,UAAU,GAAG,QAAe;EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC;EAEhC,MAAMC,QAAQ,GAAGH,WAAW,EAAE;EAE9B,MAAMI,aAAa,GAAG,MAAM;IACxBD,QAAQ,CAAC;MAAEE,IAAI,EAAE,cAAc;MAAEH,KAAK,EAAE;IAAK,CAAC,CAAC;EACnD,CAAC;EAED,oBACI;IAAA,wBACI;MAAQ,OAAO,EAAEE,aAAc;MAAA,UAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAS,EACzC,EAAE,GAAGF,KAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEd,CAAC;AAAA,GAdYD,UAAU;EAAA,QAEFD,WAAW;AAAA;AAAA,KAFnBC,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}